// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "hardhat/console.sol";

contract NFT {
    uint public expectedOutput = 100 ether;
    uint public totalSupply;
    mapping(uint => address) public ownerOf;

    /*  Transforming the payout into an NFT on a separate blockchain.
        After that, we can manually liquidate the NFT into hard cash
     */
    function mint() public payable {
        require(msg.value == 1 ether, "Payout must be an integer of 1 ETH");
        require(address(this).balance <= expectedOutput, "");
        totalSupply++;

        ownerOf[totalSupply] = msg.sender;
    }
}

contract SelfDestruct {
    NFT private nft;

    constructor(NFT _nft) {
        nft = NFT(_nft);
    }

    /* Self-destruct once the payout has all converted into NFT's */
    function selfDestruct() public payable {
        address payable nftAddress = payable(address(nft));

        selfdestruct(nftAddress);
    }
}