import { expect } from "chai"
import { ethers } from "hardhat"

describe("Deploy contracts", function() {
    let deployer, user, exploit

    beforeEach(async function() {
        [deployer, user, attacker] = await ethers.getSigners()
        const BankFactory = await ethers.getContractFactory("Bank", deployer)

        this.bankContract = await BankFactory.deploy()

        await bankContract.deposit({ value: ethers.utils.parseEther("100") })
        await bankContract.connect(user).deposit({ value: ethers.utils.parseEther("50") })
        const ExploitFactory = await ethers.getContractFactory("Exploit", exploit)

        this.exploitContract = await ExploitFactory.deploy(this.bankContract.address)
    })

    describe("Deposit and withdrawal of 'Bank' smart contract", function() {
        it ("Should accept deposits", async function() {
            const deployerBalance = await this.bankContract.balanceOf(deployer.address)

            expect(deployerBalance).to.eq(ethers.utils.parseEther("100"))
            const userBalance = await this.bankContract.balanceOf(user.address)

            expect(userBalance).to.eq(ethers.utils.parseEther("50"))
        })
    })
})